;;; Automatically generated on Sat Jul 11 12:17:01 2015
;;; Invoked by wuwenqing@wuwenqingdeMacBook-Pro-2.local using 24.5.1
(setq-default kill-ring '(#(";;默认所有主题都是安全的" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 13 (fontified t face font-lock-comment-face)) #("(setq custom-safe-themes t)" 0 27 (fontified t)) #("(cu)" 0 3 (fontified t) 3 4 (fontified t)) #("

(provide 'init-helm)
" 0 1 (face font-lock-comment-face fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 10 (face font-lock-keyword-face fontified t) 10 12 (fontified t) 12 21 (face font-lock-constant-face fontified t) 21 23 (fontified t)) #("

;;TODO: config edit operations here
(require 'init-editing-utils)

;;TODO: change git config to magit
(require 'init-git)

;;TODO: config compile here

;;load modes
(require 'init-markdown)
(require 'init-csv)
(require 'init-erlang)
(require 'init-javascript)
(require 'init-php)
(require 'init-html)
(require 'init-css)
(require 'init-nxml)
(require 'init-sql)
(require 'init-haml)
(require 'init-python-mode)
(require 'init-cmake)
(require 'init-cpp)

(when *spell-check-support-enable*
  (require 'init-spelling))

(require 'init-misc)
(require 'init-dash)
(require 'init-ledger)

;;额外配置包，无需配置
(require-package 'gnuplot)
(require-package 'lua-mode)
(require-package 'htmlize)
(require-package 'dsvn)
(when *is-a-mac*
  (require-package 'osx-location))
(require-package 'regex-tool)


;;---------------------------------------------------------
;;加载个人配置" 0 2 (fontified t) 2 4 (face font-lock-comment-delimiter-face fontified t) 4 38 (face font-lock-comment-face fontified t) 38 39 (fontified t) 39 46 (face font-lock-keyword-face fontified t) 46 48 (fontified t) 48 66 (face font-lock-constant-face fontified t) 66 69 (fontified t) 69 71 (face font-lock-comment-delimiter-face fontified t) 71 104 (face font-lock-comment-face fontified t) 104 105 (fontified t) 105 112 (face font-lock-keyword-face fontified t) 112 114 (fontified t) 114 122 (face font-lock-constant-face fontified t) 122 125 (fontified t) 125 127 (face font-lock-comment-delimiter-face fontified t) 127 153 (face font-lock-comment-face fontified t) 153 154 (fontified t) 154 156 (face font-lock-comment-delimiter-face fontified t) 156 167 (face font-lock-comment-face fontified t) 167 168 (fontified t) 168 175 (face font-lock-keyword-face fontified t) 175 177 (fontified t) 177 190 (face font-lock-constant-face fontified t) 190 193 (fontified t) 193 200 (face font-lock-keyword-face fontified t) 200 202 (fontified t) 202 210 (face font-lock-constant-face fontified t) 210 213 (fontified t) 213 220 (face font-lock-keyword-face fontified t) 220 222 (fontified t) 222 233 (face font-lock-constant-face fontified t) 233 236 (fontified t) 236 243 (face font-lock-keyword-face fontified t) 243 245 (fontified t) 245 260 (face font-lock-constant-face fontified t) 260 263 (fontified t) 263 270 (face font-lock-keyword-face fontified t) 270 272 (fontified t) 272 280 (face font-lock-constant-face fontified t) 280 283 (fontified t) 283 290 (face font-lock-keyword-face fontified t) 290 292 (fontified t) 292 301 (face font-lock-constant-face fontified t) 301 304 (fontified t) 304 311 (face font-lock-keyword-face fontified t) 311 313 (fontified t) 313 321 (face font-lock-constant-face fontified t) 321 324 (fontified t) 324 331 (face font-lock-keyword-face fontified t) 331 333 (fontified t) 333 342 (face font-lock-constant-face fontified t) 342 345 (fontified t) 345 352 (face font-lock-keyword-face fontified t) 352 354 (fontified t) 354 362 (face font-lock-constant-face fontified t) 362 365 (fontified t) 365 372 (face font-lock-keyword-face fontified t) 372 374 (fontified t) 374 383 (face font-lock-constant-face fontified t) 383 386 (fontified t) 386 393 (face font-lock-keyword-face fontified t) 393 395 (fontified t) 395 411 (face font-lock-constant-face fontified t) 411 414 (fontified t) 414 421 (face font-lock-keyword-face fontified t) 421 423 (fontified t) 423 433 (face font-lock-constant-face fontified t) 433 436 (fontified t) 436 443 (face font-lock-keyword-face fontified t) 443 445 (fontified t) 445 453 (face font-lock-constant-face fontified t) 453 457 (fontified t) 457 461 (face font-lock-keyword-face fontified t) 461 494 (fontified t) 494 501 (face font-lock-keyword-face fontified t) 501 503 (fontified t) 503 516 (face font-lock-constant-face fontified t) 516 519 (fontified t) 519 857 (fontified nil)) #("(require-package 'helm)" 0 23 (fontified t)) #("(require-package 'helm)" 0 1 (fontified t) 1 22 (fontified t) 22 23 (fontified t)) #(";;(require-package 'helm-gtags)" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 31 (face font-lock-comment-face fontified t)) #("spell-check-support-enable" 0 26 (face font-lock-variable-name-face fontified t))))
(setq-default session-file-alist '(("~/.emacs" 2483 1446 1 nil nil 2456 (overwrite-mode)) ("~/.emacs.d/lisp/custom.el" 483 3002 1 nil nil 483 (overwrite-mode)) ("~/.emacs.d/lisp/init-helm.el" 349 372 1 nil nil 372 (overwrite-mode)) ("~/.emacs.d/lisp/init-self-kdb.el" 170 590 1 nil nil 119 (overwrite-mode)) ("~/.emacs.d/lisp/init-helm-gtags.el" 107 301 1 nil nil 107 (overwrite-mode)) ("~/.emacs.d/elpa/regex-tool-20131104.1434/regex-tool-autoloads.el" 337 nil 1 nil nil 337 (overwrite-mode)) ("~/.emacs.d/elpa/osx-location-20150613.217/osx-location-autoloads.el" 508 nil 1 nil nil 508 (overwrite-mode)) ("~/.emacs.d/elpa/dsvn-20130120.1257/dsvn-autoloads.el" 217 nil 1 nil nil 217 (overwrite-mode)) ("~/.emacs.d/elpa/htmlize-20130207.1202/htmlize-autoloads.el" 2731 nil 1 nil nil 2731 (overwrite-mode)) ("~/.emacs.d/elpa/lua-mode-20150518.942/lua-mode-autoloads.el" 464 nil 1 nil nil 464 (overwrite-mode)) ("~/.emacs.d/elpa/gnuplot-20141231.1337/gnuplot-autoloads.el" 3144 nil 1 nil nil 3144 (overwrite-mode)) ("~/.emacs.d/elpa/flycheck-ledger-20140605.1146/flycheck-ledger-autoloads.el" 247 nil 1 nil nil 247 (overwrite-mode)) ("~/.emacs.d/elpa/ledger-mode-20150628.1939/ledger-mode-autoloads.el" 870 nil 1 nil nil 870 (overwrite-mode)) ("~/.emacs.d/elpa/dash-at-point-20140626.35/dash-at-point-autoloads.el" 5704 nil 1 nil nil 5704 (overwrite-mode)) ("~/.emacs.d/elpa/function-args-20150702.445/function-args-autoloads.el" 541 nil 1 nil nil 541 (overwrite-mode)) ("~/.emacs.d/elpa/swiper-20150709.919/swiper-autoloads.el" 1344 nil 1 nil nil 1344 (overwrite-mode)) ("~/.emacs.d/elpa/cmake-mode-20150625.739/cmake-mode-autoloads.el" 1465 nil 1 nil nil 1465 (overwrite-mode)) ("~/.emacs.d/elpa/pip-requirements-20150423.1358/pip-requirements-autoloads.el" 854 nil 1 nil nil 854 (overwrite-mode)) ("~/.emacs.d/elpa/sql-indent-20150424.1716/sql-indent-autoloads.el" 229 nil 1 nil nil 229 (overwrite-mode)) ("~/.emacs.d/lisp/init-git.el" 112 nil 1 nil nil 108 (overwrite-mode)) ("~/.emacs.d/elpa/css-eldoc-20150124.1923/css-eldoc-autoloads.el" 644 nil 1 nil nil 644 (overwrite-mode)) ("~/.emacs.d/elpa/skewer-less-20131015.622/skewer-less-autoloads.el" 735 nil 1 nil nil 735 (overwrite-mode)) ("~/.emacs.d/elpa/less-css-mode-20150511.319/less-css-mode-autoloads.el" 643 nil 1 nil nil 643 (overwrite-mode)) ("~/.emacs.d/elpa/scss-mode-20150107.1400/scss-mode-autoloads.el" 475 nil 1 nil nil 475 (overwrite-mode)) ("~/.emacs.d/elpa/sass-mode-20150508.2012/sass-mode-autoloads.el" 436 nil 1 nil nil 436 (overwrite-mode)) ("~/.emacs.d/elpa/haml-mode-20150508.2011/haml-mode-autoloads.el" 436 nil 1 nil nil 436 (overwrite-mode)) ("~/.emacs.d/elpa/rainbow-mode-0.11/rainbow-mode-autoloads.el" 473 nil 1 nil nil 473 (overwrite-mode)) ("~/.emacs.d/elpa/tagedit-20141021.2139/tagedit-autoloads.el" 1624 nil 1 nil nil 1624 (overwrite-mode)) ("~/.emacs.d/elpa/s-20140910.334/s-autoloads.el" 211 nil 1 nil nil 211 (overwrite-mode)) ("~/.emacs.d/elpa/tidy-20111222.1756/tidy-autoloads.el" 1049 nil 1 nil nil 1049 (overwrite-mode)) ("~/.emacs.d/elpa/smarty-mode-20100703.458/smarty-mode-autoloads.el" 467 nil 1 nil nil 467 (overwrite-mode)) ("~/.emacs.d/elpa/php-mode-20150623.431/php-mode-autoloads.el" 840 nil 1 nil nil 840 (overwrite-mode)) ("~/.emacs.d/elpa/rainbow-delimiters-20150320.17/rainbow-delimiters-autoloads.el" 718 nil 1 nil nil 718 (overwrite-mode)) ("~/.emacs.d/elpa/js-comint-20080530.757/js-comint-autoloads.el" 2449 nil 1 nil nil 2449 (overwrite-mode)) ("~/.emacs.d/elpa/coffee-mode-20150602.2205/coffee-mode-autoloads.el" 695 nil 1 nil nil 695 (overwrite-mode)) ("~/.emacs.d/elpa/ac-js2-20140906.442/ac-js2-autoloads.el" 1110 nil 1 nil nil 1110 (overwrite-mode)) ("~/.emacs.d/elpa/skewer-mode-20150422.1818/skewer-mode-autoloads.el" 2716 nil 1 nil nil 2716 (overwrite-mode)) ("~/.emacs.d/elpa/simple-httpd-20150430.1755/simple-httpd-autoloads.el" 759 nil 1 nil nil 759 (overwrite-mode)) ("~/.emacs.d/elpa/js2-mode-20150630.1336/js2-mode-autoloads.el" 1237 nil 1 nil nil 1237 (overwrite-mode)) ("~/.emacs.d/elpa/json-mode-20150413.1948/json-mode-autoloads.el" 624 nil 1 nil nil 624 (overwrite-mode)) ("~/.emacs.d/elpa/json-reformat-20150406.1705/json-reformat-autoloads.el" 557 nil 1 nil nil 557 (overwrite-mode)) ("~/.emacs.d/elpa/json-snatcher-20150511.2047/json-snatcher-autoloads.el" 433 nil 1 nil nil 433 (overwrite-mode)) ("~/.emacs.d/elpa/erlang-20150622.644/erlang-autoloads.el" 5241 nil 1 nil nil 5241 (overwrite-mode)) ("~/.emacs.d/elpa/csv-nav-20130407.1820/csv-nav-autoloads.el" 361 nil 1 nil nil 361 (overwrite-mode)) ("~/.emacs.d/elpa/csv-mode-1.5/csv-mode-autoloads.el" 2150 nil 1 nil nil 2150 (overwrite-mode)) ("~/.emacs.d/elpa/markdown-mode-20150703.1903/markdown-mode-autoloads.el" 697 nil 1 nil nil 697 (overwrite-mode)) ("~/.emacs.d/lisp/init-editing-utils.el" 591 nil 1 nil nil 590 (overwrite-mode))))
(setq-default file-name-history '("/Users/wuwenqing/.emacs" "/Users/wuwenqing/.emacs.d/lisp/custom.el" "~/.emacs" "/Users/wuwenqing/.emacs.d/lisp/init-helm.el" "~/.emacs.d/elpa/pip-requirements-20150423.1358/pip-requirements-autoloads.el" "~/.emacs.d/lisp/init-self-kdb.el" "/Users/wuwenqing/.emacs.d/lisp/init-self-kdb.el" "/Users/wuwenqing/.emacs.d/lisp/init-helm-gtags.el" "~/.emacs.d/lisp/init-helm.el" "~/.emacs.d/elpa/regex-tool-20131104.1434/regex-tool-autoloads.el" "~/.emacs.d/elpa/osx-location-20150613.217/osx-location-autoloads.el" "~/.emacs.d/elpa/dsvn-20130120.1257/dsvn-autoloads.el" "~/.emacs.d/elpa/htmlize-20130207.1202/htmlize-autoloads.el" "~/.emacs.d/elpa/lua-mode-20150518.942/lua-mode-autoloads.el" "~/.emacs.d/elpa/gnuplot-20141231.1337/gnuplot-autoloads.el" "~/.emacs.d/elpa/flycheck-ledger-20140605.1146/flycheck-ledger-autoloads.el" "~/.emacs.d/elpa/ledger-mode-20150628.1939/ledger-mode-autoloads.el" "~/.emacs.d/elpa/dash-at-point-20140626.35/dash-at-point-autoloads.el" "~/.emacs.d/elpa/function-args-20150702.445/function-args-autoloads.el" "~/.emacs.d/elpa/swiper-20150709.919/swiper-autoloads.el" "~/.emacs.d/elpa/cmake-mode-20150625.739/cmake-mode-autoloads.el" "~/.emacs.d/elpa/sql-indent-20150424.1716/sql-indent-autoloads.el" "/Users/wuwenqing/.emacs.d/lisp/init-git.el" "/Users/wuwenqing/.emacs.d/lisp/init-cpp.el" "/Users/wuwenqing/.emacs.d/lisp/init-cmake.el" "~/.emacs.d/elpa/css-eldoc-20150124.1923/css-eldoc-autoloads.el" "~/.emacs.d/elpa/skewer-less-20131015.622/skewer-less-autoloads.el" "~/.emacs.d/elpa/less-css-mode-20150511.319/less-css-mode-autoloads.el" "~/.emacs.d/elpa/scss-mode-20150107.1400/scss-mode-autoloads.el" "~/.emacs.d/elpa/sass-mode-20150508.2012/sass-mode-autoloads.el" "~/.emacs.d/elpa/haml-mode-20150508.2011/haml-mode-autoloads.el" "~/.emacs.d/elpa/rainbow-mode-0.11/rainbow-mode-autoloads.el" "~/.emacs.d/elpa/tagedit-20141021.2139/tagedit-autoloads.el" "~/.emacs.d/elpa/s-20140910.334/s-autoloads.el" "~/.emacs.d/elpa/tidy-20111222.1756/tidy-autoloads.el" "~/.emacs.d/elpa/smarty-mode-20100703.458/smarty-mode-autoloads.el" "~/.emacs.d/elpa/php-mode-20150623.431/php-mode-autoloads.el" "~/.emacs.d/elpa/rainbow-delimiters-20150320.17/rainbow-delimiters-autoloads.el" "~/.emacs.d/elpa/js-comint-20080530.757/js-comint-autoloads.el" "~/.emacs.d/elpa/coffee-mode-20150602.2205/coffee-mode-autoloads.el" "~/.emacs.d/elpa/ac-js2-20140906.442/ac-js2-autoloads.el" "~/.emacs.d/elpa/skewer-mode-20150422.1818/skewer-mode-autoloads.el" "~/.emacs.d/elpa/simple-httpd-20150430.1755/simple-httpd-autoloads.el" "~/.emacs.d/elpa/js2-mode-20150630.1336/js2-mode-autoloads.el" "~/.emacs.d/elpa/json-mode-20150413.1948/json-mode-autoloads.el" "~/.emacs.d/elpa/json-reformat-20150406.1705/json-reformat-autoloads.el" "~/.emacs.d/elpa/json-snatcher-20150511.2047/json-snatcher-autoloads.el" "~/.emacs.d/elpa/erlang-20150622.644/erlang-autoloads.el" "~/.emacs.d/elpa/csv-nav-20130407.1820/csv-nav-autoloads.el" "~/.emacs.d/elpa/csv-mode-1.5/csv-mode-autoloads.el" "~/.emacs.d/elpa/markdown-mode-20150703.1903/markdown-mode-autoloads.el" "/Users/wuwenqing/.emacs.d/lisp/init-editing-utils.el" "~/.emacs.d/lisp/ac-setting.el" "~/.emacs.d/elpa/mmm-mode-20150624.210/mmm-mode-autoloads.el" "~/.emacs.d/elpa/session-20120510.1700/session-autoloads.el" "~/.emacs.d/lisp/init-self-funcs.el" "~/.emacs.d/lisp/funcs/self-reload-file.el" "~/.emacs.d/lisp/init-git.el" "~/.emacs.d/lisp/unicad.el" "~/.emacs.d/lisp/init-helm-gtags.el" "~/OpenSource/purcell_emacs/lisp/init-ledger.el" "~/OpenSource/purcell_emacs/lisp/init-dash.el" "~/OpenSource/purcell_emacs/lisp/init-darcs.el" "~/OpenSource/purcell_emacs/lisp/init-misc.el" "~/OpenSource/purcell_emacs/lisp/init-sessions.el" "~/OpenSource/purcell_emacs/lisp/init-spelling.el" "~/.emacs.d/lisp/custom.el" "~/.emacs.d/lisp/init-cpp.el" "~/.emacs.d/lisp/init-cmake.el" "~/OpenSource/purcell_emacs/lisp/init-markdown.el" "~/OpenSource/purcell_emacs/lisp/init-textile.el" "~/OpenSource/purcell_emacs/lisp/init-crontab.el" "~/OpenSource/purcell_emacs/lisp/init-compile.el" "~/OpenSource/purcell_emacs/lisp/init-common-lisp.el" "~/.emacs.d/lisp/common.el" "~/OpenSource/purcell_emacs/lisp/init-osx-keys.el" "~/OpenSource/purcell_emacs/lisp/init-editing-utils.el" "~/.emacs.d/lisp/init-editing-utils.el" "~/OpenSource/purcell_emacs/lisp/init-git.el" "~/OpenSource/purcell_emacs/lisp/init-vc.el" "~/OpenSource/purcell_emacs/lisp/init-mmm.el" "~/OpenSource/purcell_emacs/lisp/init-fonts.el" "~/.emacs.d/elpa/switch-window-20150114.215/switch-window-autoloads.el"))
(setq-default search-ring '("spell" "helm"))
(setq-default buffer-name-history '("*scratch*" ".emacs" "init-helm.el" "*Messages*" "*helm-mode-load-file*" "*Buffer List*" "pip-requirements-autoloads.el" "init-self-kdb.el" "init-helm-gtags.el" "*shell*" "HEAD:.emacs.d/lisp/init-helm.el" "*git log: ../.emacs*" "*Warnings*" "*Compile-Log*" "init-git.el" "init-cpp.el" "init-cmake.el" "init-editing-utils.el"))
(setq-default command-history '((find-file "/Users/wuwenqing/.emacs") (find-file "/Users/wuwenqing/.emacs.d/lisp/custom.el") (kill-buffer "*scratch*") (kill-buffer ".emacs") (kill-buffer "init-helm.el") (load-file "/Users/wuwenqing/.emacs") (find-file "/Users/wuwenqing/.emacs.d/lisp/init-helm.el") (kill-buffer "*Messages*") (kill-buffer "*helm-mode-load-file*") (kill-buffer "*Buffer List*") (kill-buffer "pip-requirements-autoloads.el") (kill-buffer "init-self-kdb.el") (load-file "/Users/wuwenqing/.emacs.d/lisp/init-self-kdb.el") (switch-to-buffer "init-self-kdb.el") (find-file "/Users/wuwenqing/.emacs.d/lisp/init-self-kdb.el") (uncomment-region (region-beginning) (region-end) nil) (switch-to-buffer "init-helm.el") (kill-buffer "init-helm-gtags.el") (switch-to-buffer "init-helm-gtags.el") (shell nil) (find-file "/Users/wuwenqing/.emacs.d/lisp/init-helm-gtags.el") (flymake-start-syntax-check) (package-install (quote helm)) (switch-to-buffer "*shell*") (switch-to-buffer ".emacs") (load-file "/Users/wuwenqing/.emacs.d/lisp/init-helm.el") (package-install (quote helm-gtags)) (kill-buffer "HEAD:.emacs.d/lisp/init-helm.el") (git-diff-head) (kill-buffer "*git log: ../.emacs*") (git-log-files) (kill-buffer "*Warnings*") (kill-buffer "*Compile-Log*") (kill-buffer "init-git.el") (find-file "/Users/wuwenqing/.emacs.d/lisp/init-git.el") (kill-buffer "init-cpp.el") (find-file "/Users/wuwenqing/.emacs.d/lisp/init-cpp.el") (kill-buffer "init-cmake.el") (find-file "/Users/wuwenqing/.emacs.d/lisp/init-cmake.el") (kill-buffer "init-editing-utils.el") (find-file "/Users/wuwenqing/.emacs.d/lisp/init-editing-utils.el") (load-file "/Users/wuwenqing/.emacs.d/lisp/init-editing-utils.el")))
(setq-default extended-command-history '("load-file" "uncomment-region" "shell" "flymake-start-syntax-check" "package-install" "git-diff-head" "git-log-files" "comment-region" "dired" "rename-file"))
(setq-default helm-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" . helm-find-many-files) ("Find file as root" . helm-find-file-as-root) ("Find file other window" . find-file-other-window) ("Find file other frame" . find-file-other-frame) ("Open dired in file's directory" . helm-open-dired) ("Grep File(s) `C-u recurse'" . helm-find-files-grep) ("Zgrep File(s) `C-u Recurse'" . helm-ff-zgrep) ("Pdfgrep File(s)" . helm-ff-pdfgrep) ("Insert as org link" . helm-files-insert-as-org-link) ("Checksum File" . helm-ff-checksum) ("Ediff File" . helm-find-files-ediff-files) ("Ediff Merge File" . helm-find-files-ediff-merge-files) ("Etags `M-., C-u tap, C-u C-u reload tag file'" . helm-ff-etags-select) ("View file" . view-file) ("Insert file" . insert-file) ("Add marked files to file-cache" . helm-ff-cache-add-file) ("Delete file(s)" . helm-delete-marked-files) ("Copy file(s) `M-C, C-u to follow'" . helm-find-files-copy) ("Rename file(s) `M-R, C-u to follow'" . helm-find-files-rename) ("Symlink files(s) `M-S, C-u to follow'" . helm-find-files-symlink) ("Relsymlink file(s) `C-u to follow'" . helm-find-files-relsymlink) ("Hardlink file(s) `M-H, C-u to follow'" . helm-find-files-hardlink) ("Open file externally (C-u to choose)" . helm-open-file-externally) ("Open file with default tool" . helm-open-file-with-default-tool) ("Find file in hex dump" . hexl-find-file))))
(setq-default helm-ff-history '("/Users/wuwenqing/" "/Users/wuwenqing/.emacs.d/"))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" . helm-find-many-files) ("Find file as root" . helm-find-file-as-root) ("Find file other window" . find-file-other-window) ("Find file other frame" . find-file-other-frame) ("Open dired in file's directory" . helm-open-dired) ("Grep File(s) `C-u recurse'" . helm-find-files-grep) ("Zgrep File(s) `C-u Recurse'" . helm-ff-zgrep) ("Pdfgrep File(s)" . helm-ff-pdfgrep) ("Insert as org link" . helm-files-insert-as-org-link) ("Checksum File" . helm-ff-checksum) ("Ediff File" . helm-find-files-ediff-files) ("Ediff Merge File" . helm-find-files-ediff-merge-files) ("Etags `M-., C-u tap, C-u C-u reload tag file'" . helm-ff-etags-select) ("View file" . view-file) ("Insert file" . insert-file) ("Add marked files to file-cache" . helm-ff-cache-add-file) ("Delete file(s)" . helm-delete-marked-files) ("Copy file(s) `M-C, C-u to follow'" . helm-find-files-copy) ("Rename file(s) `M-R, C-u to follow'" . helm-find-files-rename) ("Symlink files(s) `M-S, C-u to follow'" . helm-find-files-symlink) ("Relsymlink file(s) `C-u to follow'" . helm-find-files-relsymlink) ("Hardlink file(s) `M-H, C-u to follow'" . helm-find-files-hardlink) ("Open file externally (C-u to choose)" . helm-open-file-externally) ("Open file with default tool" . helm-open-file-with-default-tool) ("Find file in hex dump" . hexl-find-file))))
(setq-default ido-buffer-history '("*scratch*" ".emacs" "init-helm.el" "*Messages*" "*helm-mode-load-file*" "*Buffer List*" "pip-requirements-autoloads.el" "init-self-kdb.el" "init-helm-gtags.el" "*shell*" nil "HEAD:.emacs.d/lisp/init-helm.el" "*git log: ../.emacs*" "*Warnings*" "*Compile-Log*" "init-git.el" "init-cpp.el" "init-cmake.el" "init-editing-utils.el" "ac-setting.el" "init-self-funcs.el" "self-reload-file.el" "unicad.el" "init.el" "init-ledger.el" "init-dash.el" "init-darcs.el" "init-misc.el" "init-sessions.el" "init-spelling.el" "custom.el" "init-markdown.el" "init-textile.el" "init-crontab.el" "init-compile.el" "init-common-lisp.el" "common.el" "init-osx-keys.el" "init-vc.el" "init-mmm.el" "init-fonts.el"))
(setq-default ido-file-history '(".emacs" "custom.el" "init-helm.el" "init-self-kdb.el" "init-helm-gtags.el" "init-git.el" "init-cpp.el" "init-cmake.el" "init-editing-utils.el" "ac-setting.el" "init-self-funcs.el" "self-reload-file.el" "unicad.el" "init-ledger.el" "init-dash.el" "init-darcs.el" "init-misc.el" "init-spelling.el" "init-markdown.el" "init-textile.el" "init-crontab.el" "init-compile.el" "init-common-lisp.el" "common.el" "init-osx-keys.el" "init-vc.el" "init-mmm.el" "init-fonts.el" "init-sessions.el" "init-windows.el" "init-auto-complete.el" "init-grep.el" "init-hippie-expand.el" "init-recentf.el" "." "init-flychecker.el" "init-flycheck.el" "init-ibuffer.el" "init-uniquify.el" "init-uniqufy.el" "init-isearch.el" "init-dired.el" "init-proxies.el" "init.el"))
(setq-default minibuffer-history '("/Users/wuwenqing/.emacs" "/Users/wuwenqing/.emacs.d/lisp" "helm" "helm-gtags"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default smex-history '(load-file uncomment-region shell flymake-start-syntax-check package-install comment-region dired))
